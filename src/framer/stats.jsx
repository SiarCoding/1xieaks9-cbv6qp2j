// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 82783e7fcf4f326d "Nexora (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Desktop' | 'Tablet' | 'Phone' // Variant
}} Props

 */

/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */
import {
	className,
	css,
	fonts,
	stdin_default,
} from "./chunks/chunk-U2NP2CSD.js";
import "./chunks/chunk-Z3H63M2K.js";
import { routes } from "./chunks/chunk-4RDRNIVJ.js";

// virtual:stats
import { Fragment as Fragment3 } from "react";
import { ContextProviders } from "unframer";

// /:https://framer.com/m/Stats-Y3sI.js
import { jsx as _jsx3, jsxs as _jsxs2 } from "react/jsx-runtime";
import {
	addFonts as addFonts2,
	addPropertyControls as addPropertyControls3,
	ComponentViewportProvider,
	ControlType as ControlType6,
	cx as cx2,
	getFonts,
	getFontsFromSharedStyle as getFontsFromSharedStyle2,
	RichText as RichText2,
	SmartComponentScopedContainer,
	useComponentViewport as useComponentViewport2,
	useLocaleInfo as useLocaleInfo2,
	useVariantState as useVariantState2,
	withCSS as withCSS2,
	withFX as withFX2,
} from "unframer";
import {
	LayoutGroup as LayoutGroup2,
	motion as motion2,
	MotionConfigContext as MotionConfigContext2,
} from "unframer";
import * as React4 from "react";
import { useRef as useRef5 } from "react";

// /:https://framerusercontent.com/modules/lRDHiNWNVWmE0lqtoVHP/7qT0r3So12155VV5Jq5x/Video.js
import { jsx as _jsx } from "react/jsx-runtime";
import {
	addPropertyControls,
	ControlType as ControlType4,
	useIsInCurrentNavigationTarget as useIsInCurrentNavigationTarget2,
	RenderTarget as RenderTarget3,
} from "unframer";
import { isMotionValue as isMotionValue2, useInView } from "unframer";

// /:https://framerusercontent.com/modules/VTUDdizacRHpwbkOamr7/AykinQJbgwl92LvMGZwu/constants.js
import { ControlType } from "unframer";
var containerStyles = {
	position: "relative",
	width: "100%",
	height: "100%",
	display: "flex",
	justifyContent: "center",
	alignItems: "center",
};
var emptyStateStyle = {
	...containerStyles,
	borderRadius: 6,
	background: "rgba(136, 85, 255, 0.3)",
	color: "#85F",
	border: "1px dashed #85F",
	flexDirection: "column",
};
var defaultEvents = {
	onClick: {
		type: ControlType.EventHandler,
	},
	onMouseEnter: {
		type: ControlType.EventHandler,
	},
	onMouseLeave: {
		type: ControlType.EventHandler,
	},
};
var fontSizeOptions = {
	type: ControlType.Number,
	title: "Font Size",
	min: 2,
	max: 200,
	step: 1,
	displayStepper: true,
};
var fontControls = {
	font: {
		type: ControlType.Boolean,
		title: "Font",
		defaultValue: false,
		disabledTitle: "Default",
		enabledTitle: "Custom",
	},
	fontFamily: {
		type: ControlType.String,
		title: "Family",
		placeholder: "Inter",
		hidden: ({ font }) => !font,
	},
	fontWeight: {
		type: ControlType.Enum,
		title: "Weight",
		options: [100, 200, 300, 400, 500, 600, 700, 800, 900],
		optionTitles: [
			"Thin",
			"Extra-light",
			"Light",
			"Regular",
			"Medium",
			"Semi-bold",
			"Bold",
			"Extra-bold",
			"Black",
		],
		hidden: ({ font }) => !font,
	},
};

// /:https://framerusercontent.com/modules/D4TWeLfcxT6Tysr2BlYg/iZjmqdxVx1EOiM3k1FaW/useOnNavigationTargetChange.js
import { useIsInCurrentNavigationTarget } from "unframer";
import { useEffect } from "react";
function useOnEnter(onEnter, enabled) {
	return useOnSpecificTargetChange(true, onEnter, enabled);
}
function useOnExit(onExit, enabled) {
	return useOnSpecificTargetChange(false, onExit, enabled);
}
function useOnSpecificTargetChange(goal, callback, enabled = true) {
	const isInTarget = useIsInCurrentNavigationTarget();
	useEffect(() => {
		if (enabled && isInTarget === goal) callback();
	}, [isInTarget]);
}

// /:https://framerusercontent.com/modules/ExNgrA7EJTKUPpH6vIlN/eiOrSJ2Ab5M9jPCvVwUz/useConstant.js
import { useRef } from "react";

// /:https://framerusercontent.com/modules/D2Lz5CmnNVPZFFiZXalt/QaCzPbriZBfXWZIIycFI/colorFromToken.js
import { Color } from "unframer";

// /:https://framerusercontent.com/modules/3mKFSGQqKHV82uOV1eBc/5fbRLvOpxZC0JOXugvwm/isMotionValue.js
import { MotionValue } from "unframer";

// /:https://framerusercontent.com/modules/xDiQsqBGXzmMsv7AlEVy/uhunpMiNsbXxzjlXsg1y/useUniqueClassName.js
import * as React from "react";

// /:https://framerusercontent.com/modules/ETACN5BJyFTSo0VVDJfu/NHRqowOiXkF9UwOzczF7/variantUtils.js
import { ControlType as ControlType2 } from "unframer";

// /:https://framerusercontent.com/modules/eMBrwoqQK7h6mEeGQUH8/GuplvPJVjmxpk9zqOTcb/isBrowser.js
import { useMemo } from "react";
var __unframerNavigator = typeof window !== "undefined" ? navigator : void 0;
var isBrowserSafari = () => {
	if (typeof __unframerNavigator !== `undefined`) {
		const userAgent = __unframerNavigator.userAgent.toLowerCase();
		const isSafari =
			(userAgent.indexOf("safari") > -1 ||
				userAgent.indexOf("framermobile") > -1 ||
				userAgent.indexOf("framerx") > -1) &&
			userAgent.indexOf("chrome") < 0;
		return isSafari;
	} else return false;
};
var useIsBrowserSafari = () => useMemo(() => isBrowserSafari(), []);

// /:https://framerusercontent.com/modules/v9AWX2URmiYsHf7GbctE/XxKAZ9KlhWqf5x1JMyyF/useOnChange.js
import { useEffect as useEffect3 } from "react";

// /:https://framerusercontent.com/modules/kNDwabfjDEb3vUxkQlZS/fSIr3AOAYbGlfSPgXpYu/useAutoMotionValue.js
import { useCallback, useEffect as useEffect4, useRef as useRef2 } from "react";
import { motionValue, animate, RenderTarget } from "unframer";

// /:https://framerusercontent.com/modules/cuQH4dmpDnV8YK1mSgQX/KqRXqunFjE6ufhpc7ZRu/useFontControls.js
import { fontStore } from "unframer";
import { useEffect as useEffect5 } from "react";

// /:https://framerusercontent.com/modules/afBE9Yx1W6bY5q32qPxe/m3q7puE2tbo1S2C0s0CT/useRenderTarget.js
import { useMemo as useMemo2 } from "react";
import { RenderTarget as RenderTarget2 } from "unframer";
function useRenderTarget() {
	const currentRenderTarget = useMemo2(() => RenderTarget2.current(), []);
	return currentRenderTarget;
}
function useIsOnCanvas() {
	const onCanvas = useMemo2(
		() => RenderTarget2.current() === RenderTarget2.canvas,
		[],
	);
	return onCanvas;
}

// /:https://framerusercontent.com/modules/zGkoP8tPDCkoBzMdt5uq/0zFSjxIYliHxrQQnryFX/useControlledState.js
import * as React2 from "react";

// /:https://framerusercontent.com/modules/5SM58HxZHxjjv7aLMOgQ/WXz9i6mVki0bBCrKdqB3/propUtils.js
import { useMemo as useMemo3 } from "react";
import { ControlType as ControlType3 } from "unframer";
function useRadius(props) {
	const {
		borderRadius,
		isMixedBorderRadius,
		topLeftRadius,
		topRightRadius,
		bottomRightRadius,
		bottomLeftRadius,
	} = props;
	const radiusValue = useMemo3(
		() =>
			isMixedBorderRadius
				? `${topLeftRadius}px ${topRightRadius}px ${bottomRightRadius}px ${bottomLeftRadius}px`
				: `${borderRadius}px`,
		[
			borderRadius,
			isMixedBorderRadius,
			topLeftRadius,
			topRightRadius,
			bottomRightRadius,
			bottomLeftRadius,
		],
	);
	return radiusValue;
}
var borderRadiusControl = {
	borderRadius: {
		title: "Radius",
		type: ControlType3.FusedNumber,
		toggleKey: "isMixedBorderRadius",
		toggleTitles: ["Radius", "Radius per corner"],
		valueKeys: [
			"topLeftRadius",
			"topRightRadius",
			"bottomRightRadius",
			"bottomLeftRadius",
		],
		valueLabels: ["TL", "TR", "BR", "BL"],
		min: 0,
	},
};
var paddingControl = {
	padding: {
		type: ControlType3.FusedNumber,
		toggleKey: "paddingPerSide",
		toggleTitles: ["Padding", "Padding per side"],
		valueKeys: ["paddingTop", "paddingRight", "paddingBottom", "paddingLeft"],
		valueLabels: ["T", "R", "B", "L"],
		min: 0,
		title: "Padding",
	},
};

// /:https://framerusercontent.com/modules/lRDHiNWNVWmE0lqtoVHP/7qT0r3So12155VV5Jq5x/Video.js
import {
	memo,
	useCallback as useCallback2,
	useEffect as useEffect7,
	useMemo as useMemo4,
	useRef as useRef3,
	useState as useState3,
} from "react";
var ObjectFitType;
(function (ObjectFitType2) {
	ObjectFitType2["Fill"] = "fill";
	ObjectFitType2["Contain"] = "contain";
	ObjectFitType2["Cover"] = "cover";
	ObjectFitType2["None"] = "none";
	ObjectFitType2["ScaleDown"] = "scale-down";
})(ObjectFitType || (ObjectFitType = {}));
var SrcType;
(function (SrcType2) {
	SrcType2["Video"] = "Upload";
	SrcType2["Url"] = "URL";
})(SrcType || (SrcType = {}));
var defaultVideo =
	"https://framerusercontent.com/assets/MLWPbW1dUQawJLhhun3dBwpgJak.mp4";
function getProps(props) {
	const {
		width,
		height,
		topLeft,
		topRight,
		bottomRight,
		bottomLeft,
		id,
		children,
		...rest
	} = props;
	return rest;
}
function Video(props) {
	const newProps = getProps(props);
	return <VideoMemo {...newProps} />;
}
function usePlaybackControls(videoRef) {
	const isInCurrentNavigationTarget = useIsInCurrentNavigationTarget2();
	const requestingPlay = useRef3(false);
	const isPlayingRef = useRef3(false);
	const setProgress = useCallback2((rawProgress) => {
		if (!videoRef.current) return;
		const newProgress =
			(rawProgress === 1 ? 0.999 : rawProgress) * videoRef.current.duration;
		const isAlreadySet =
			Math.abs(videoRef.current.currentTime - newProgress) < 0.1;
		if (videoRef.current.duration > 0 && !isAlreadySet) {
			videoRef.current.currentTime = newProgress;
		}
	}, []);
	const play = useCallback2(() => {
		const video = videoRef.current;
		if (!video) return;
		video.preload = "auto";
		const isPlaying =
			video.currentTime > 0 &&
			video.onplaying &&
			!video.paused &&
			!video.ended &&
			video.readyState >= video.HAVE_CURRENT_DATA;
		if (
			!isPlaying &&
			video &&
			!requestingPlay.current &&
			isInCurrentNavigationTarget
		) {
			requestingPlay.current = true;
			isPlayingRef.current = true;
			video
				.play()
				.catch((e) => {})
				.finally(() => (requestingPlay.current = false));
		}
	}, []);
	const pause = useCallback2(() => {
		if (!videoRef.current || requestingPlay.current) return;
		videoRef.current.pause();
		isPlayingRef.current = false;
	}, []);
	return {
		play,
		pause,
		setProgress,
		isPlaying: isPlayingRef,
	};
}
function useAutoplayBehavior({
	playingProp,
	muted,
	loop,
	playsinline,
	controls,
}) {
	const [initialPlayingProp] = useState3(() => playingProp);
	const [hasPlayingPropChanged, setHasPlayingPropChanged] = useState3(false);
	if (playingProp !== initialPlayingProp && !hasPlayingPropChanged) {
		setHasPlayingPropChanged(true);
	}
	const behavesAsGif =
		// passing `playing === true` on mount indicates that the video should
		// autoplay, like a GIF
		initialPlayingProp &&
		muted &&
		loop &&
		playsinline &&
		!controls &&
		// Some users of the <Video> component use it by wrapping it with
		// another smart component and adding their own controls on top. (The
		// controls use transitions to control the video: e.g., when clicking
		// the play button, the smart component will transition to a state with
		// <Video playing={true} />.) In this case, we don't want the video to
		// behave as a gif, as it will be weird if the video suddenly started
		// acting as such (and auto-pausing when leaving the viewport) as soon
		// as the site visitor mutes it and clicks “Play”.
		!hasPlayingPropChanged;
	let autoplay;
	if (behavesAsGif) autoplay = "on-viewport";
	else if (initialPlayingProp) autoplay = "on-mount";
	else autoplay = "no-autoplay";
	return autoplay;
}
var VideoMemo = /* @__PURE__ */ memo(function VideoInner(props) {
	const {
		// default props
		srcType = "URL",
		srcUrl,
		srcFile = "",
		posterEnabled = false,
		controls = false,
		playing = true,
		loop = true,
		muted = true,
		playsinline = true,
		restartOnEnter = false,
		objectFit = "cover",
		backgroundColor = "rgba(0,0,0,0)",
		radius = 0,
		volume = 25,
		startTime: startTimeProp = 0,
		poster,
		playing: playingProp,
		progress,
		onSeeked,
		onPause,
		onPlay,
		onEnd,
		onClick,
		onMouseEnter,
		onMouseLeave,
		onMouseDown,
		onMouseUp,
	} = props;
	const videoRef = useRef3();
	const isSafari = useIsBrowserSafari();
	const wasPausedOnLeave = useRef3(null);
	const wasEndedOnLeave = useRef3(null);
	const isOnCanvas = useIsOnCanvas();
	const renderTarget = useRenderTarget();
	const isStaticRenderer = isOnCanvas || renderTarget === RenderTarget3.export;
	const borderRadius = useRadius(props);
	const autoplayBehavior = isStaticRenderer
		? "no-autoplay"
		: useAutoplayBehavior({
				playingProp,
				muted,
				loop,
				playsinline,
				controls,
			});
	const isInViewport = isStaticRenderer ? true : useInView(videoRef);
	const isCloseToViewport = isStaticRenderer
		? false
		: useInView(videoRef, {
				margin: "10%",
				once: true,
			});
	const startTime = startTimeProp === 100 ? 99.9 : startTimeProp;
	const { play, pause, setProgress, isPlaying } = usePlaybackControls(videoRef);
	useEffect7(() => {
		if (isStaticRenderer) return;
		if (autoplayBehavior === "on-viewport") return;
		if (playingProp) play();
		else pause();
	}, [autoplayBehavior, playingProp]);
	useEffect7(() => {
		if (isStaticRenderer) return;
		if (isInViewport && playingProp && autoplayBehavior !== "no-autoplay")
			play();
		if (autoplayBehavior !== "on-viewport") return;
		pause();
	}, [autoplayBehavior, isInViewport, playingProp]);
	useEffect7(() => {
		if (
			!isOnCanvas ||
			poster ||
			posterEnabled ||
			startTime ||
			!videoRef.current
		)
			return;
		videoRef.current.currentTime = 0.01;
	}, [posterEnabled, poster, startTime]);
	const isMountedAndReadyForProgressChanges = useRef3(false);
	useEffect7(() => {
		if (!isMountedAndReadyForProgressChanges.current) {
			isMountedAndReadyForProgressChanges.current = true;
			return;
		}
		const rawProgressValue = isMotionValue2(progress)
			? progress.get()
			: (progress ?? 0) * 0.01;
		setProgress(
			// When the progress value exists (e.g. <Video startTime={10}
			// progress={50} />), we respect the `progress` value over
			// `startTime`, even if `startTime` changes. That’s because
			// `startTime` == start == changing it shouldn’t affect the current
			// progress
			(rawProgressValue ?? 0) ||
				// Then why fall back to `startTime` when `progress` doesn’t exist,
				// you might ask? Now, that’s for
				// - canvas UX: we want the video progress to change when the user
				//   is scrobbling the “Start Time” in component settings.
				// - backwards compatibility: maybe some users *are* scrobbling
				//   using `startTime` instead of `progress`? We don’t know, and it
				//   always supported it, so let’s not break it
				(startTime ?? 0) / 100,
		);
	}, [startTime, srcFile, srcUrl, progress]);
	useEffect7(() => {
		if (!isMotionValue2(progress)) return;
		return progress.on("change", (value) => setProgress(value));
	}, [progress]);
	useOnEnter(() => {
		if (wasPausedOnLeave.current === null) return;
		if (videoRef.current) {
			if ((!wasEndedOnLeave && loop) || !wasPausedOnLeave.current) play();
		}
	});
	useOnExit(() => {
		if (videoRef.current) {
			wasEndedOnLeave.current = videoRef.current.ended;
			wasPausedOnLeave.current = videoRef.current.paused;
			pause();
		}
	});
	const src = useMemo4(() => {
		let fragment = "";
		if (srcType === "URL") return srcUrl + fragment;
		if (srcType === "Upload") return srcFile + fragment;
	}, [srcType, srcFile, srcUrl, startTime]);
	useEffect7(() => {
		if (isSafari && videoRef.current && autoplayBehavior === "on-mount") {
			setTimeout(() => play(), 50);
		}
	}, []);
	useEffect7(() => {
		if (videoRef.current && !muted)
			videoRef.current.volume = (volume ?? 0) / 100;
	}, [volume]);
	const handleReady = () => {
		const video = videoRef.current;
		if (!video) return;
		if (video.currentTime < 0.3 && startTime > 0)
			setProgress((startTime ?? 0) * 0.01);
		if (
			// when the component updates (e.g. only srcFile/url changes), and the video was already playing, keep playing
			isPlaying.current ||
			autoplayBehavior === "on-mount" ||
			(playingProp && autoplayBehavior === "on-viewport" && isInViewport)
		)
			play();
	};
	return (
		<video
			onClick={onClick}
			onMouseEnter={onMouseEnter}
			onMouseLeave={onMouseLeave}
			onMouseDown={onMouseDown}
			onMouseUp={onMouseUp}
			src={src}
			loop={loop}
			ref={videoRef}
			onSeeked={(e) => onSeeked?.(e)}
			onPause={(e) => onPause?.(e)}
			onPlay={(e) => onPlay?.(e)}
			onEnded={(e) => onEnd?.(e)}
			autoPlay={
				isPlaying.current ||
				autoplayBehavior === "on-mount" ||
				(playingProp && autoplayBehavior === "on-viewport" && isInViewport)
			}
			preload={
				isPlaying.current
					? "auto"
					: isStaticRenderer && !poster
						? "metadata"
						: autoplayBehavior !== "on-mount" && !isCloseToViewport
							? "none"
							: // `autoplay` overrides this too
								"metadata"
			}
			poster={
				posterEnabled && !srcFile && srcUrl === defaultVideo
					? "https://framerusercontent.com/images/5ILRvlYXf72kHSVHqpa3snGzjU.jpg"
					: posterEnabled && poster
						? poster
						: void 0
			}
			onLoadedData={handleReady}
			controls={controls}
			muted={isStaticRenderer ? true : muted}
			playsInline={playsinline}
			style={{
				cursor: !!onClick ? "pointer" : "auto",
				width: "100%",
				height: "100%",
				borderRadius,
				display: "block",
				objectFit,
				backgroundColor,
				objectPosition: "50% 50%",
			}}
		/>
	);
});
Video.displayName = "Video";
function capitalizeFirstLetter(value) {
	return value.charAt(0).toUpperCase() + value.slice(1);
}
function titleCase(value) {
	const groups = value.match(/[A-Z]{2,}|[A-Z][a-z]+|[a-z]+|[A-Z]|\d+/gu) || [];
	return groups.map(capitalizeFirstLetter).join(" ");
}
var objectFitOptions = ["cover", "fill", "contain", "scale-down", "none"];
addPropertyControls(Video, {
	srcType: {
		type: ControlType4.Enum,
		displaySegmentedControl: true,
		title: "Source",
		options: ["URL", "Upload"],
	},
	srcUrl: {
		type: ControlType4.String,
		title: "URL",
		defaultValue:
			"https://framerusercontent.com/assets/MLWPbW1dUQawJLhhun3dBwpgJak.mp4",
		hidden(props) {
			return props.srcType === "Upload";
		},
	},
	srcFile: {
		type: ControlType4.File,
		title: "File",
		allowedFileTypes: ["mp4", "webm"],
		hidden(props) {
			return props.srcType === "URL";
		},
	},
	playing: {
		type: ControlType4.Boolean,
		title: "Playing",
		enabledTitle: "Yes",
		disabledTitle: "No",
	},
	...borderRadiusControl,
	posterEnabled: {
		type: ControlType4.Boolean,
		title: "Poster",
		enabledTitle: "Yes",
		disabledTitle: "No",
	},
	poster: {
		type: ControlType4.Image,
		title: "Image",
		hidden: ({ posterEnabled }) => !posterEnabled,
		description:
			"We recommend adding a poster. [Learn more](https://www.framer.com/help/articles/how-are-videos-optimized-in-framer/).",
	},
	backgroundColor: {
		type: ControlType4.Color,
		title: "Background",
		defaultValue: "rgba(0,0,0,0)",
	},
	startTime: {
		title: "Start Time",
		type: ControlType4.Number,
		min: 0,
		max: 100,
		step: 0.1,
		unit: "%",
	},
	loop: {
		type: ControlType4.Boolean,
		title: "Loop",
		enabledTitle: "Yes",
		disabledTitle: "No",
	},
	objectFit: {
		type: ControlType4.Enum,
		title: "Fit",
		options: objectFitOptions,
		optionTitles: objectFitOptions.map(titleCase),
	},
	// restartOnEnter: {
	//     type: ControlType.Boolean,
	//     title: "On ReEnter",
	//     enabledTitle: "Restart",
	//     disabledTitle: "Resume",
	// },
	controls: {
		type: ControlType4.Boolean,
		title: "Controls",
		enabledTitle: "Show",
		disabledTitle: "Hide",
		defaultValue: false,
	},
	muted: {
		type: ControlType4.Boolean,
		title: "Muted",
		enabledTitle: "Yes",
		disabledTitle: "No",
	},
	volume: {
		type: ControlType4.Number,
		max: 100,
		min: 0,
		unit: "%",
		hidden: ({ muted }) => muted,
		defaultValue: 25,
	},
	onEnd: {
		type: ControlType4.EventHandler,
	},
	onSeeked: {
		type: ControlType4.EventHandler,
	},
	onPause: {
		type: ControlType4.EventHandler,
	},
	onPlay: {
		type: ControlType4.EventHandler,
	},
	...defaultEvents,
});

// /:https://framerusercontent.com/modules/daegdGSoYpiTptf820pf/vp1QvUgpcUNcPbBAau1c/I9K5d3ERb.js
import { jsx as _jsx2, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls as addPropertyControls2,
	ControlType as ControlType5,
	cx,
	getFontsFromSharedStyle,
	RichText,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
	withFX,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React3 from "react";

// /:https://framerusercontent.com/modules/14sKecBuif9qxVM9kNXQ/oIpr5deKrqg2focV4KMn/IBuebZNpT.js
import { fontStore as fontStore2 } from "unframer";
fontStore2.loadFonts([
	"GF;Instrument Sans-500",
	"GF;Instrument Sans-700",
	"GF;Instrument Sans-700italic",
	"GF;Instrument Sans-500italic",
]);
var fonts2 = [
	{
		explicitInter: true,
		fonts: [
			{
				family: "Instrument Sans",
				source: "google",
				style: "normal",
				url: "https://fonts.gstatic.com/s/instrumentsans/v1/pximypc9vsFDm051Uf6KVwgkfoSxQ0GsQv8ToedPibnr-yp2JGEJOH9npST3-QfwmS0v3_7Y.woff2",
				weight: "500",
			},
			{
				family: "Instrument Sans",
				source: "google",
				style: "normal",
				url: "https://fonts.gstatic.com/s/instrumentsans/v1/pximypc9vsFDm051Uf6KVwgkfoSxQ0GsQv8ToedPibnr-yp2JGEJOH9npSQi_gfwmS0v3_7Y.woff2",
				weight: "700",
			},
			{
				family: "Instrument Sans",
				source: "google",
				style: "italic",
				url: "https://fonts.gstatic.com/s/instrumentsans/v1/pxigypc9vsFDm051Uf6KVwgkfoSbSnNPooZAN0lInHGpCWNE27lgU-XJojENugixkywN2u7YUwU.woff2",
				weight: "700",
			},
			{
				family: "Instrument Sans",
				source: "google",
				style: "italic",
				url: "https://fonts.gstatic.com/s/instrumentsans/v1/pxigypc9vsFDm051Uf6KVwgkfoSbSnNPooZAN0lInHGpCWNE27lgU-XJojENut22kywN2u7YUwU.woff2",
				weight: "500",
			},
		],
	},
];
var css2 = [
	'.framer-CkOB6 .framer-styles-preset-1usrp2a:not(.rich-text-wrapper), .framer-CkOB6 .framer-styles-preset-1usrp2a.rich-text-wrapper h1 { --framer-font-family: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-family-bold: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-family-bold-italic: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-family-italic: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 60px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: italic; --framer-font-style-italic: italic; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-font-weight-bold: 700; --framer-font-weight-bold-italic: 700; --framer-font-weight-italic: 500; --framer-letter-spacing: -0.035em; --framer-line-height: 1.2em; --framer-paragraph-spacing: 0px; --framer-text-alignment: left; --framer-text-color: var(--token-38f68815-7867-4cb4-b7c3-02378b3e2eac, #0d0d0d); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; }',
	'@media (max-width: 1199px) and (min-width: 810px) { .framer-CkOB6 .framer-styles-preset-1usrp2a:not(.rich-text-wrapper), .framer-CkOB6 .framer-styles-preset-1usrp2a.rich-text-wrapper h1 { --framer-font-family: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-family-bold: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-family-bold-italic: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-family-italic: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 52px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: italic; --framer-font-style-italic: italic; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-font-weight-bold: 700; --framer-font-weight-bold-italic: 700; --framer-font-weight-italic: 500; --framer-letter-spacing: -0.035em; --framer-line-height: 1.2em; --framer-paragraph-spacing: 0px; --framer-text-alignment: left; --framer-text-color: var(--token-38f68815-7867-4cb4-b7c3-02378b3e2eac, #0d0d0d); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; } }',
	'@media (max-width: 809px) and (min-width: 0px) { .framer-CkOB6 .framer-styles-preset-1usrp2a:not(.rich-text-wrapper), .framer-CkOB6 .framer-styles-preset-1usrp2a.rich-text-wrapper h1 { --framer-font-family: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-family-bold: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-family-bold-italic: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-family-italic: "Instrument Sans", "Instrument Sans Placeholder", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 42px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: italic; --framer-font-style-italic: italic; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-font-weight-bold: 700; --framer-font-weight-bold-italic: 700; --framer-font-weight-italic: 500; --framer-letter-spacing: -0.035em; --framer-line-height: 1.2em; --framer-paragraph-spacing: 0px; --framer-text-alignment: left; --framer-text-color: var(--token-38f68815-7867-4cb4-b7c3-02378b3e2eac, #0d0d0d); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; } }',
];
var className2 = "framer-CkOB6";

// /:https://framerusercontent.com/modules/f7c5r83mdfGShoxLBcvM/KMV8agEoNnB7awolzZF2/OsSk4wk17.js
import { fontStore as fontStore3 } from "unframer";
fontStore3.loadFonts([
	"FS;Satoshi-medium",
	"FS;Satoshi-bold",
	"FS;Satoshi-bold italic",
	"FS;Satoshi-medium italic",
]);
var fonts3 = [
	{
		explicitInter: true,
		fonts: [
			{
				family: "Satoshi",
				source: "fontshare",
				style: "normal",
				url: "https://framerusercontent.com/third-party-assets/fontshare/wf/P2LQKHE6KA6ZP4AAGN72KDWMHH6ZH3TA/ZC32TK2P7FPS5GFTL46EU6KQJA24ZYDB/7AHDUZ4A7LFLVFUIFSARGIWCRQJHISQP.woff2",
				weight: "500",
			},
			{
				family: "Satoshi",
				source: "fontshare",
				style: "normal",
				url: "https://framerusercontent.com/third-party-assets/fontshare/wf/LAFFD4SDUCDVQEXFPDC7C53EQ4ZELWQI/PXCT3G6LO6ICM5I3NTYENYPWJAECAWDD/GHM6WVH6MILNYOOCXHXB5GTSGNTMGXZR.woff2",
				weight: "700",
			},
			{
				family: "Satoshi",
				source: "fontshare",
				style: "italic",
				url: "https://framerusercontent.com/third-party-assets/fontshare/wf/CDEBEFT2R7XKNGXSBBLZGMY4MMHZG75P/HEVKDGQCYDZ7Z6CDVR2ZQGBCTUD6ZARH/BKWEE3VKGTFABE37K2DTH625VUSN2N35.woff2",
				weight: "700",
			},
			{
				family: "Satoshi",
				source: "fontshare",
				style: "italic",
				url: "https://framerusercontent.com/third-party-assets/fontshare/wf/NID3I7RITWZSKXRCJGOCMP5NOADJK6IG/2HLHGD7OBTWCOHW64YXOE5KFXHU4KJHM/ZHME2QIRFR7UPJ47NLY27RCAFY44CKZJ.woff2",
				weight: "500",
			},
		],
	},
];
var css3 = [
	`.framer-EL9ay .framer-styles-preset-133dyqj:not(.rich-text-wrapper), .framer-EL9ay .framer-styles-preset-133dyqj.rich-text-wrapper p { --framer-font-family: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-bold: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-bold-italic: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-italic: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-open-type-features: 'blwf' on, 'cv09' on, 'cv03' on, 'cv04' on, 'cv11' on; --framer-font-size: 22px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: italic; --framer-font-style-italic: italic; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-font-weight-bold: 700; --framer-font-weight-bold-italic: 700; --framer-font-weight-italic: 500; --framer-letter-spacing: -0.025em; --framer-line-height: 1.5em; --framer-paragraph-spacing: 20px; --framer-text-alignment: left; --framer-text-color: var(--token-0e400885-4ad5-460c-800d-ba26ba3d28f7, #636363); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; }`,
	`@media (max-width: 1099px) and (min-width: 810px) { .framer-EL9ay .framer-styles-preset-133dyqj:not(.rich-text-wrapper), .framer-EL9ay .framer-styles-preset-133dyqj.rich-text-wrapper p { --framer-font-family: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-bold: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-bold-italic: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-italic: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-open-type-features: 'blwf' on, 'cv09' on, 'cv03' on, 'cv04' on, 'cv11' on; --framer-font-size: 20px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: italic; --framer-font-style-italic: italic; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-font-weight-bold: 700; --framer-font-weight-bold-italic: 700; --framer-font-weight-italic: 400; --framer-letter-spacing: -0.03em; --framer-line-height: 1.5em; --framer-paragraph-spacing: 20px; --framer-text-alignment: left; --framer-text-color: var(--token-0e400885-4ad5-460c-800d-ba26ba3d28f7, #636363); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; } }`,
	`@media (max-width: 809px) and (min-width: 0px) { .framer-EL9ay .framer-styles-preset-133dyqj:not(.rich-text-wrapper), .framer-EL9ay .framer-styles-preset-133dyqj.rich-text-wrapper p { --framer-font-family: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-bold: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-bold-italic: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-italic: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-open-type-features: 'blwf' on, 'cv09' on, 'cv03' on, 'cv04' on, 'cv11' on; --framer-font-size: 20px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: italic; --framer-font-style-italic: italic; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-font-weight-bold: 700; --framer-font-weight-bold-italic: 700; --framer-font-weight-italic: 400; --framer-letter-spacing: -0.03em; --framer-line-height: 1.5em; --framer-paragraph-spacing: 20px; --framer-text-alignment: left; --framer-text-color: var(--token-0e400885-4ad5-460c-800d-ba26ba3d28f7, #636363); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; } }`,
];
var className3 = "framer-EL9ay";

// /:https://framerusercontent.com/modules/daegdGSoYpiTptf820pf/vp1QvUgpcUNcPbBAau1c/I9K5d3ERb.js
var MotionDivWithFX = withFX(motion.div);
var cycleOrder = ["hnePHKVeS", "Fd9keGHlq"];
var serializationHash = "framer-wH8Lr";
var variantClassNames = {
	Fd9keGHlq: "framer-v-1qzkc5r",
	hnePHKVeS: "framer-v-1viqg3k",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants === null || variants === void 0
		? void 0
		: variants.forEach(
				(variant) =>
					variant && Object.assign(nextOverrides, overrides[variant]),
			);
	return nextOverrides;
}
var animation = {
	opacity: 0,
	rotate: 0,
	rotateX: 0,
	rotateY: 0,
	scale: 1,
	skewX: 0,
	skewY: 0,
	x: 0,
	y: 10,
};
var transition1 = {
	damping: 52,
	delay: 0.1,
	mass: 1,
	stiffness: 400,
	type: "spring",
};
var transition2 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React3.useContext(MotionConfigContext);
	const transition =
		value !== null && value !== void 0 ? value : config.transition;
	const contextValue = React3.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React3.Fragment);
var humanReadableVariantMap = {
	Black: "Fd9keGHlq",
	White: "hnePHKVeS",
};
var getProps2 = ({ height, id, stats, text, width, ...props }) => {
	var _ref, _ref1, _humanReadableVariantMap_props_variant, _ref2;
	return {
		...props,
		FX9ATdBd1:
			(_ref = text !== null && text !== void 0 ? text : props.FX9ATdBd1) !==
				null && _ref !== void 0
				? _ref
				: "Client Retention",
		heUyfsMgj:
			(_ref1 = stats !== null && stats !== void 0 ? stats : props.heUyfsMgj) !==
				null && _ref1 !== void 0
				? _ref1
				: "95%",
		variant:
			(_ref2 =
				(_humanReadableVariantMap_props_variant =
					humanReadableVariantMap[props.variant]) !== null &&
				_humanReadableVariantMap_props_variant !== void 0
					? _humanReadableVariantMap_props_variant
					: props.variant) !== null && _ref2 !== void 0
				? _ref2
				: "hnePHKVeS",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React3.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo();
	const {
		style,
		className: className4,
		layoutId,
		variant,
		heUyfsMgj,
		FX9ATdBd1,
		...restProps
	} = getProps2(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "hnePHKVeS",
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const ref1 = React3.useRef(null);
	const defaultLayoutId = React3.useId();
	const sharedStyleClassNames = [className2, className3];
	const componentViewport = useComponentViewport();
	return (
		<LayoutGroup
			id={layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId}
		>
			<Variants animate={variants} initial={false}>
				<Transition value={transition2}>
					<MotionDivWithFX
						{...restProps}
						{...gestureHandlers}
						__framer__animate={{
							transition: transition1,
						}}
						__framer__animateOnce={true}
						__framer__enter={animation}
						__framer__styleAppearEffectEnabled={true}
						__framer__threshold={0.5}
						__perspectiveFX={false}
						__smartComponentFX={true}
						__targetOpacity={1}
						className={cx(
							serializationHash,
							...sharedStyleClassNames,
							"framer-1viqg3k",
							className4,
							classNames,
						)}
						data-framer-name={"White"}
						layoutDependency={layoutDependency}
						layoutId={"hnePHKVeS"}
						ref={ref !== null && ref !== void 0 ? ref : ref1}
						style={{
							...style,
						}}
						{...addPropertyOverrides(
							{
								Fd9keGHlq: {
									"data-framer-name": "Black",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<RichText
							__fromCanvasComponent={true}
							className={"framer-1x175ck"}
							fonts={["Inter"]}
							layoutDependency={layoutDependency}
							layoutId={"DMvsaslsA"}
							style={{
								"--extracted-gdpscs":
									"var(--token-c9b12220-87c9-4c8c-a21d-cbf1e21628af, rgb(255, 255, 255))",
								"--framer-link-text-color": "rgb(0, 153, 255)",
								"--framer-link-text-decoration": "underline",
							}}
							text={heUyfsMgj}
							variants={{
								Fd9keGHlq: {
									"--extracted-gdpscs":
										"var(--token-37c73a71-ed98-4730-86d9-6e0a52d466b3, rgb(46, 105, 255))",
								},
							}}
							verticalAlignment={"top"}
							withExternalLayout={true}
							{...addPropertyOverrides(
								{
									Fd9keGHlq: {
										children: (
											<React3.Fragment>
												<motion.h1
													className={"framer-styles-preset-1usrp2a"}
													data-styles-preset={"IBuebZNpT"}
													style={{
														"--framer-text-alignment": "left",
														"--framer-text-color":
															"var(--extracted-gdpscs, var(--token-37c73a71-ed98-4730-86d9-6e0a52d466b3, rgb(46, 105, 255)))",
													}}
												>
													{"95%"}
												</motion.h1>
											</React3.Fragment>
										),
									},
								},
								baseVariant,
								gestureVariant,
							)}
						>
							<React3.Fragment>
								<motion.h1
									className={"framer-styles-preset-1usrp2a"}
									data-styles-preset={"IBuebZNpT"}
									style={{
										"--framer-text-alignment": "left",
										"--framer-text-color":
											"var(--extracted-gdpscs, var(--token-c9b12220-87c9-4c8c-a21d-cbf1e21628af, rgb(255, 255, 255)))",
									}}
								>
									{"95%"}
								</motion.h1>
							</React3.Fragment>
						</RichText>
						<RichText
							__fromCanvasComponent={true}
							className={"framer-1h6nbuh"}
							fonts={["Inter"]}
							layoutDependency={layoutDependency}
							layoutId={"gRu_tnPQi"}
							style={{
								"--extracted-r6o4lv":
									"var(--token-c9b12220-87c9-4c8c-a21d-cbf1e21628af, rgb(255, 255, 255))",
								"--framer-link-text-color": "rgb(0, 153, 255)",
								"--framer-link-text-decoration": "underline",
								opacity: 0.7,
							}}
							text={FX9ATdBd1}
							variants={{
								Fd9keGHlq: {
									"--extracted-r6o4lv":
										"var(--token-38f68815-7867-4cb4-b7c3-02378b3e2eac, rgb(13, 13, 13))",
								},
							}}
							verticalAlignment={"top"}
							withExternalLayout={true}
							{...addPropertyOverrides(
								{
									Fd9keGHlq: {
										children: (
											<React3.Fragment>
												<motion.p
													className={"framer-styles-preset-133dyqj"}
													data-styles-preset={"OsSk4wk17"}
													style={{
														"--framer-text-color":
															"var(--extracted-r6o4lv, var(--token-38f68815-7867-4cb4-b7c3-02378b3e2eac, rgb(13, 13, 13)))",
													}}
												>
													{"Client Retention"}
												</motion.p>
											</React3.Fragment>
										),
									},
								},
								baseVariant,
								gestureVariant,
							)}
						>
							<React3.Fragment>
								<motion.p
									className={"framer-styles-preset-133dyqj"}
									data-styles-preset={"OsSk4wk17"}
									style={{
										"--framer-text-color":
											"var(--extracted-r6o4lv, var(--token-c9b12220-87c9-4c8c-a21d-cbf1e21628af, rgb(255, 255, 255)))",
									}}
								>
									{"Client Retention"}
								</motion.p>
							</React3.Fragment>
						</RichText>
					</MotionDivWithFX>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css4 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-wH8Lr.framer-z2jib5, .framer-wH8Lr .framer-z2jib5 { display: block; }",
	".framer-wH8Lr.framer-1viqg3k { align-content: flex-start; align-items: flex-start; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 5px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 217px; }",
	".framer-wH8Lr .framer-1x175ck, .framer-wH8Lr .framer-1h6nbuh { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-wH8Lr.framer-1viqg3k { gap: 0px; } .framer-wH8Lr.framer-1viqg3k > * { margin: 0px; margin-bottom: calc(5px / 2); margin-top: calc(5px / 2); } .framer-wH8Lr.framer-1viqg3k > :first-child { margin-top: 0px; } .framer-wH8Lr.framer-1viqg3k > :last-child { margin-bottom: 0px; } }",
	...css2,
	...css3,
];
var FramerI9K5d3ERb = withCSS(Component, css4, "framer-wH8Lr");
var stdin_default2 = FramerI9K5d3ERb;
FramerI9K5d3ERb.displayName = "Result Item";
FramerI9K5d3ERb.defaultProps = {
	height: 110,
	width: 217,
};
addPropertyControls2(FramerI9K5d3ERb, {
	variant: {
		options: ["hnePHKVeS", "Fd9keGHlq"],
		optionTitles: ["White", "Black"],
		title: "Variant",
		type: ControlType5.Enum,
	},
	heUyfsMgj: {
		defaultValue: "95%",
		displayTextArea: false,
		title: "Stats",
		type: ControlType5.String,
	},
	FX9ATdBd1: {
		defaultValue: "Client Retention",
		displayTextArea: false,
		title: "Text",
		type: ControlType5.String,
	},
});
addFonts(
	FramerI9K5d3ERb,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
			],
		},
		...getFontsFromSharedStyle(fonts2),
		...getFontsFromSharedStyle(fonts3),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// /:https://framer.com/m/Stats-Y3sI.js
var SectionTagFonts = getFonts(stdin_default);
var ResultItemFonts = getFonts(stdin_default2);
var VideoFonts = getFonts(Video);
var MotionDivWithFX2 = withFX2(motion2.div);
var cycleOrder2 = ["NA9tl3BSk", "PNcXG1_K3", "OfDgnmYdB"];
var serializationHash2 = "framer-YxJ9y";
var variantClassNames2 = {
	NA9tl3BSk: "framer-v-1fgwlx1",
	OfDgnmYdB: "framer-v-1pmbjim",
	PNcXG1_K3: "framer-v-oo5uka",
};
function addPropertyOverrides2(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition12 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var animation2 = {
	opacity: 0,
	rotate: 0,
	rotateX: 0,
	rotateY: 0,
	scale: 0.85,
	skewX: 0,
	skewY: 0,
	x: 0,
	y: 30,
};
var transition22 = {
	damping: 54,
	delay: 0,
	mass: 1,
	stiffness: 400,
	type: "spring",
};
var Transition2 = ({ value, children }) => {
	const config = React4.useContext(MotionConfigContext2);
	const transition = value ?? config.transition;
	const contextValue = React4.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext2.Provider value={contextValue}>
			{children}
		</MotionConfigContext2.Provider>
	);
};
var Variants2 = motion2.create(React4.Fragment);
var humanReadableVariantMap2 = {
	Desktop: "NA9tl3BSk",
	Phone: "OfDgnmYdB",
	Tablet: "PNcXG1_K3",
};
var getProps3 = ({ height, id, width, ...props }) => {
	return {
		...props,
		variant:
			humanReadableVariantMap2[props.variant] ?? props.variant ?? "NA9tl3BSk",
	};
};
var createLayoutDependency2 = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component2 = /* @__PURE__ */ React4.forwardRef(function (props, ref) {
	const fallbackRef = useRef5(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React4.useId();
	const { activeLocale, setLocale } = useLocaleInfo2();
	const componentViewport = useComponentViewport2();
	const {
		style,
		className: className4,
		layoutId,
		variant,
		...restProps
	} = getProps3(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState2({
		cycleOrder: cycleOrder2,
		defaultVariant: "NA9tl3BSk",
		ref: refBinding,
		variant,
		variantClassNames: variantClassNames2,
	});
	const layoutDependency = createLayoutDependency2(props, variants);
	const sharedStyleClassNames = [className];
	const scopingClassNames = cx2(serializationHash2, ...sharedStyleClassNames);
	return (
		<LayoutGroup2 id={layoutId ?? defaultLayoutId}>
			<Variants2 animate={variants} initial={false}>
				<Transition2 value={transition12}>
					<motion2.section
						{...restProps}
						{...gestureHandlers}
						className={cx2(
							scopingClassNames,
							"framer-1fgwlx1",
							className4,
							classNames,
						)}
						data-framer-name={"Desktop"}
						layoutDependency={layoutDependency}
						layoutId={"NA9tl3BSk"}
						ref={refBinding}
						style={{
							backgroundColor:
								"var(--token-55cd17e0-a25e-40bd-8148-346590ffdf2f, rgb(250, 250, 250))",
							...style,
						}}
						{...addPropertyOverrides2(
							{
								OfDgnmYdB: {
									"data-framer-name": "Phone",
								},
								PNcXG1_K3: {
									"data-framer-name": "Tablet",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<motion2.div
							className={"framer-xs7kb2"}
							data-framer-name={"Container"}
							layoutDependency={layoutDependency}
							layoutId={"rBdnsy9pD"}
						>
							<motion2.div
								className={"framer-12csdov"}
								data-framer-name={"Text-Content"}
								layoutDependency={layoutDependency}
								layoutId={"YDNXXCs28"}
							>
								<motion2.div
									className={"framer-1azt30e"}
									data-framer-name={"Heading Wrapper"}
									layoutDependency={layoutDependency}
									layoutId={"m1h_C0VO9"}
								>
									<ComponentViewportProvider
										height={35}
										y={
											(componentViewport?.y || 0) +
											(58 +
												((componentViewport?.height || 200) - 116 - 550) / 2) +
											0 +
											0 +
											0 +
											0 +
											0
										}
										{...addPropertyOverrides2(
											{
												OfDgnmYdB: {
													y:
														(componentViewport?.y || 0) +
														58 +
														(((componentViewport?.height || 200) - 116 - 879) /
															2 +
															0 +
															0) +
														0 +
														0 +
														0 +
														0 +
														0 +
														0,
												},
												PNcXG1_K3: {
													y:
														(componentViewport?.y || 0) +
														(58 +
															((componentViewport?.height || 200) -
																116 -
																1019) /
																2) +
														0 +
														0 +
														0 +
														0 +
														0 +
														0,
												},
											},
											baseVariant,
											gestureVariant,
										)}
									>
										<SmartComponentScopedContainer
											className={"framer-1wf0lpv-container"}
											data-framer-name={"Section-Tag"}
											layoutDependency={layoutDependency}
											layoutId={"CyK5kA_JN-container"}
											name={"Section-Tag"}
											nodeId={"CyK5kA_JN"}
											rendersWithMotion={true}
											scopeId={"nSup3sgiI"}
										>
											{_jsx3(stdin_default, {
												height: "100%",
												id: "CyK5kA_JN",
												layoutId: "CyK5kA_JN",
												name: "Section-Tag",
												OaXHVEg_A: "Results",
												variant: "iPSP_xFIy",
												width: "100%",
											})}
										</SmartComponentScopedContainer>
									</ComponentViewportProvider>
									<RichText2
										__fromCanvasComponent={true}
										className={"framer-1a1k40g"}
										fonts={["Inter"]}
										layoutDependency={layoutDependency}
										layoutId={"p0UaKTFja"}
										style={{
											"--framer-link-text-color": "rgb(0, 153, 255)",
											"--framer-link-text-decoration": "underline",
										}}
										verticalAlignment={"top"}
										withExternalLayout={true}
									>
										<React4.Fragment>
											<motion2.h2
												className={"framer-styles-preset-jaa7lk"}
												data-styles-preset={"u1TMq5IXn"}
											>
												{"Proven results that speak for themselves"}
											</motion2.h2>
										</React4.Fragment>
									</RichText2>
								</motion2.div>
								<motion2.div
									className={"framer-13tq9p5"}
									data-framer-name={"Stats-wrapper"}
									layoutDependency={layoutDependency}
									layoutId={"jRwSc_Bh3"}
								>
									<ComponentViewportProvider
										height={110}
										width={`max((min(min(max((min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px) - 38px) / 2, 1px), 585px) - 28px, (min(max((min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px) - 38px) / 2, 1px), 585px) - 28px) * 0.85) - 40px) / 2, 50px)`}
										y={
											(componentViewport?.y || 0) +
											(58 +
												((componentViewport?.height || 200) - 116 - 550) / 2) +
											0 +
											0 +
											290 +
											0 +
											0
										}
										{...addPropertyOverrides2(
											{
												OfDgnmYdB: {
													width: `max((max(min(${componentViewport?.width || "100vw"} - 40px, 1100px), 50px) - 40px) / 2, 50px)`,
													y:
														(componentViewport?.y || 0) +
														58 +
														(((componentViewport?.height || 200) - 116 - 879) /
															2 +
															0 +
															0) +
														0 +
														0 +
														0 +
														161 +
														0 +
														0,
												},
												PNcXG1_K3: {
													width: `max((min(max(min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px), 50px) - 28px, (max(min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px), 50px) - 28px) * 0.85) - 40px) / 2, 50px)`,
													y:
														(componentViewport?.y || 0) +
														(58 +
															((componentViewport?.height || 200) -
																116 -
																1019) /
																2) +
														0 +
														0 +
														0 +
														151 +
														0 +
														0,
												},
											},
											baseVariant,
											gestureVariant,
										)}
									>
										<SmartComponentScopedContainer
											className={"framer-aw69vu-container"}
											data-framer-name={"Stats-Number"}
											layoutDependency={layoutDependency}
											layoutId={"zICYqlPNT-container"}
											name={"Stats-Number"}
											nodeId={"zICYqlPNT"}
											rendersWithMotion={true}
											scopeId={"nSup3sgiI"}
										>
											{_jsx3(stdin_default2, {
												FX9ATdBd1: "Projects Done",
												height: "100%",
												heUyfsMgj: "150",
												id: "zICYqlPNT",
												layoutId: "zICYqlPNT",
												name: "Stats-Number",
												style: {
													width: "100%",
												},
												variant: "Fd9keGHlq",
												width: "100%",
											})}
										</SmartComponentScopedContainer>
									</ComponentViewportProvider>
									<ComponentViewportProvider
										height={110}
										width={`max((min(min(max((min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px) - 38px) / 2, 1px), 585px) - 28px, (min(max((min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px) - 38px) / 2, 1px), 585px) - 28px) * 0.85) - 40px) / 2, 50px)`}
										y={
											(componentViewport?.y || 0) +
											(58 +
												((componentViewport?.height || 200) - 116 - 550) / 2) +
											0 +
											0 +
											290 +
											0 +
											0
										}
										{...addPropertyOverrides2(
											{
												OfDgnmYdB: {
													width: `max((max(min(${componentViewport?.width || "100vw"} - 40px, 1100px), 50px) - 40px) / 2, 50px)`,
													y:
														(componentViewport?.y || 0) +
														58 +
														(((componentViewport?.height || 200) - 116 - 879) /
															2 +
															0 +
															0) +
														0 +
														0 +
														0 +
														161 +
														0 +
														0,
												},
												PNcXG1_K3: {
													width: `max((min(max(min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px), 50px) - 28px, (max(min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px), 50px) - 28px) * 0.85) - 40px) / 2, 50px)`,
													y:
														(componentViewport?.y || 0) +
														(58 +
															((componentViewport?.height || 200) -
																116 -
																1019) /
																2) +
														0 +
														0 +
														0 +
														151 +
														0 +
														0,
												},
											},
											baseVariant,
											gestureVariant,
										)}
									>
										<SmartComponentScopedContainer
											className={"framer-nuo49k-container"}
											data-framer-name={"Stats-Number"}
											layoutDependency={layoutDependency}
											layoutId={"lKY492FrS-container"}
											name={"Stats-Number"}
											nodeId={"lKY492FrS"}
											rendersWithMotion={true}
											scopeId={"nSup3sgiI"}
										>
											{_jsx3(stdin_default2, {
												FX9ATdBd1: "Client Retention",
												height: "100%",
												heUyfsMgj: "99%",
												id: "lKY492FrS",
												layoutId: "lKY492FrS",
												name: "Stats-Number",
												style: {
													width: "100%",
												},
												variant: "Fd9keGHlq",
												width: "100%",
											})}
										</SmartComponentScopedContainer>
									</ComponentViewportProvider>
									<ComponentViewportProvider
										height={110}
										width={`max((min(min(max((min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px) - 38px) / 2, 1px), 585px) - 28px, (min(max((min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px) - 38px) / 2, 1px), 585px) - 28px) * 0.85) - 40px) / 2, 50px)`}
										y={
											(componentViewport?.y || 0) +
											(58 +
												((componentViewport?.height || 200) - 116 - 550) / 2) +
											0 +
											0 +
											290 +
											0 +
											150
										}
										{...addPropertyOverrides2(
											{
												OfDgnmYdB: {
													width: `max((max(min(${componentViewport?.width || "100vw"} - 40px, 1100px), 50px) - 40px) / 2, 50px)`,
													y:
														(componentViewport?.y || 0) +
														58 +
														(((componentViewport?.height || 200) - 116 - 879) /
															2 +
															0 +
															0) +
														0 +
														0 +
														0 +
														161 +
														0 +
														150,
												},
												PNcXG1_K3: {
													width: `max((min(max(min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px), 50px) - 28px, (max(min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px), 50px) - 28px) * 0.85) - 40px) / 2, 50px)`,
													y:
														(componentViewport?.y || 0) +
														(58 +
															((componentViewport?.height || 200) -
																116 -
																1019) /
																2) +
														0 +
														0 +
														0 +
														151 +
														0 +
														150,
												},
											},
											baseVariant,
											gestureVariant,
										)}
									>
										<SmartComponentScopedContainer
											className={"framer-1pquijp-container"}
											data-framer-name={"Stats-Number"}
											layoutDependency={layoutDependency}
											layoutId={"mVtcQTdsp-container"}
											name={"Stats-Number"}
											nodeId={"mVtcQTdsp"}
											rendersWithMotion={true}
											scopeId={"nSup3sgiI"}
										>
											{_jsx3(stdin_default2, {
												FX9ATdBd1: "Team productivity",
												height: "100%",
												heUyfsMgj: "40%",
												id: "mVtcQTdsp",
												layoutId: "mVtcQTdsp",
												name: "Stats-Number",
												style: {
													width: "100%",
												},
												variant: "Fd9keGHlq",
												width: "100%",
											})}
										</SmartComponentScopedContainer>
									</ComponentViewportProvider>
									<ComponentViewportProvider
										height={110}
										width={`max((min(min(max((min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px) - 38px) / 2, 1px), 585px) - 28px, (min(max((min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px) - 38px) / 2, 1px), 585px) - 28px) * 0.85) - 40px) / 2, 50px)`}
										y={
											(componentViewport?.y || 0) +
											(58 +
												((componentViewport?.height || 200) - 116 - 550) / 2) +
											0 +
											0 +
											290 +
											0 +
											150
										}
										{...addPropertyOverrides2(
											{
												OfDgnmYdB: {
													width: `max((max(min(${componentViewport?.width || "100vw"} - 40px, 1100px), 50px) - 40px) / 2, 50px)`,
													y:
														(componentViewport?.y || 0) +
														58 +
														(((componentViewport?.height || 200) - 116 - 879) /
															2 +
															0 +
															0) +
														0 +
														0 +
														0 +
														161 +
														0 +
														150,
												},
												PNcXG1_K3: {
													width: `max((min(max(min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px), 50px) - 28px, (max(min(max(${componentViewport?.width || "100vw"} - 50px, 1px), 1100px), 50px) - 28px) * 0.85) - 40px) / 2, 50px)`,
													y:
														(componentViewport?.y || 0) +
														(58 +
															((componentViewport?.height || 200) -
																116 -
																1019) /
																2) +
														0 +
														0 +
														0 +
														151 +
														0 +
														150,
												},
											},
											baseVariant,
											gestureVariant,
										)}
									>
										<SmartComponentScopedContainer
											className={"framer-6fji00-container"}
											data-framer-name={"Stats-Number"}
											layoutDependency={layoutDependency}
											layoutId={"qcvxvyoVg-container"}
											name={"Stats-Number"}
											nodeId={"qcvxvyoVg"}
											rendersWithMotion={true}
											scopeId={"nSup3sgiI"}
										>
											{_jsx3(stdin_default2, {
												FX9ATdBd1: "Profit Return",
												height: "100%",
												heUyfsMgj: "5X+",
												id: "qcvxvyoVg",
												layoutId: "qcvxvyoVg",
												name: "Stats-Number",
												style: {
													width: "100%",
												},
												variant: "Fd9keGHlq",
												width: "100%",
											})}
										</SmartComponentScopedContainer>
									</ComponentViewportProvider>
								</motion2.div>
							</motion2.div>
							<MotionDivWithFX2
								__framer__animate={{
									transition: transition22,
								}}
								__framer__animateOnce={true}
								__framer__enter={animation2}
								__framer__styleAppearEffectEnabled={true}
								__framer__threshold={0.5}
								__perspectiveFX={false}
								__smartComponentFX={true}
								__targetOpacity={1}
								className={"framer-oo8obb"}
								data-framer-name={"Video-Wrapper"}
								layoutDependency={layoutDependency}
								layoutId={"YeLYD0YlF"}
							>
								<ComponentViewportProvider>
									<SmartComponentScopedContainer
										className={"framer-vex0yc-container"}
										data-framer-name={"Video"}
										isAuthoredByUser={true}
										isModuleExternal={true}
										layoutDependency={layoutDependency}
										layoutId={"g4zrlzHea-container"}
										name={"Video"}
										nodeId={"g4zrlzHea"}
										rendersWithMotion={true}
										scopeId={"nSup3sgiI"}
									>
										<Video
											backgroundColor={"rgba(0, 0, 0, 0)"}
											borderRadius={28}
											bottomLeftRadius={28}
											bottomRightRadius={28}
											controls={false}
											height={"100%"}
											id={"g4zrlzHea"}
											isMixedBorderRadius={false}
											layoutId={"g4zrlzHea"}
											loop={true}
											muted={true}
											name={"Video"}
											objectFit={"cover"}
											playing={true}
											posterEnabled={false}
											srcFile={
												"https://framerusercontent.com/assets/3u2qVQFioewmTR98aKt47KJoY.mp4"
											}
											srcType={"Upload"}
											srcUrl={
												"https://framerusercontent.com/assets/MLWPbW1dUQawJLhhun3dBwpgJak.mp4"
											}
											startTime={0}
											style={{
												height: "100%",
												width: "100%",
											}}
											topLeftRadius={28}
											topRightRadius={28}
											volume={25}
											width={"100%"}
										/>
									</SmartComponentScopedContainer>
								</ComponentViewportProvider>
							</MotionDivWithFX2>
						</motion2.div>
					</motion2.section>
				</Transition2>
			</Variants2>
		</LayoutGroup2>
	);
});
var css5 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-YxJ9y.framer-pszd2s, .framer-YxJ9y .framer-pszd2s { display: block; }",
	".framer-YxJ9y.framer-1fgwlx1 { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 58px 25px 58px 25px; position: relative; width: 1200px; }",
	".framer-YxJ9y .framer-xs7kb2 { align-content: center; align-items: center; display: flex; flex: 1 0 0px; flex-direction: row; flex-wrap: nowrap; height: min-content; justify-content: space-between; max-width: 1100px; overflow: hidden; padding: 0px; position: relative; width: 1px; }",
	".framer-YxJ9y .framer-12csdov { align-content: flex-start; align-items: flex-start; align-self: stretch; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; height: auto; justify-content: space-between; max-width: 585px; overflow: visible; padding: 0px 28px 0px 0px; position: relative; width: 1px; }",
	".framer-YxJ9y .framer-1azt30e { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 18px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }",
	".framer-YxJ9y .framer-1wf0lpv-container { flex: none; height: auto; position: relative; width: auto; }",
	".framer-YxJ9y .framer-1a1k40g { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }",
	".framer-YxJ9y .framer-13tq9p5 { display: grid; flex: none; gap: 40px; grid-auto-rows: min-content; grid-template-columns: repeat(2, minmax(50px, 1fr)); grid-template-rows: repeat(1, min-content); height: min-content; justify-content: center; max-width: 85%; overflow: hidden; padding: 0px; position: relative; width: 100%; }",
	".framer-YxJ9y .framer-aw69vu-container, .framer-YxJ9y .framer-nuo49k-container, .framer-YxJ9y .framer-1pquijp-container, .framer-YxJ9y .framer-6fji00-container { align-self: start; flex: none; height: auto; justify-self: start; position: relative; width: 100%; }",
	".framer-YxJ9y .framer-oo8obb { align-content: center; align-items: center; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 550px; justify-content: center; max-width: 450px; overflow: hidden; padding: 32px; position: relative; width: 1px; }",
	".framer-YxJ9y .framer-vex0yc-container { bottom: 0px; flex: none; left: 0px; position: absolute; right: 0px; top: 0px; z-index: 1; }",
	".framer-YxJ9y.framer-v-oo5uka.framer-1fgwlx1 { width: 810px; }",
	".framer-YxJ9y.framer-v-oo5uka .framer-xs7kb2 { align-content: unset; align-items: unset; display: grid; gap: 58px; grid-auto-rows: min-content; grid-template-columns: repeat(1, minmax(50px, 1fr)); grid-template-rows: repeat(1, min-content); justify-content: center; }",
	".framer-YxJ9y.framer-v-oo5uka .framer-12csdov { align-self: start; flex: none; gap: 38px; height: 1fr; justify-content: flex-start; justify-self: start; max-width: unset; width: 100%; }",
	".framer-YxJ9y.framer-v-oo5uka .framer-oo8obb { align-self: start; flex: none; justify-self: start; max-width: unset; width: 100%; }",
	".framer-YxJ9y.framer-v-1pmbjim.framer-1fgwlx1 { flex-direction: column; padding: 58px 20px 58px 20px; width: 390px; }",
	".framer-YxJ9y.framer-v-1pmbjim .framer-xs7kb2 { align-content: unset; align-items: unset; display: grid; flex: none; gap: 58px; grid-auto-rows: min-content; grid-template-columns: repeat(1, minmax(50px, 1fr)); grid-template-rows: repeat(1, min-content); justify-content: center; width: 100%; }",
	".framer-YxJ9y.framer-v-1pmbjim .framer-12csdov { align-self: start; flex: none; gap: 48px; height: 1fr; justify-content: flex-start; justify-self: start; max-width: unset; padding: 0px; width: 100%; }",
	".framer-YxJ9y.framer-v-1pmbjim .framer-13tq9p5 { max-width: unset; }",
	".framer-YxJ9y.framer-v-1pmbjim .framer-oo8obb { align-self: start; flex: none; height: 400px; justify-self: start; max-width: unset; width: 100%; }",
	...css,
];
var FramernSup3sgiI = withCSS2(Component2, css5, "framer-YxJ9y");
var stdin_default3 = FramernSup3sgiI;
FramernSup3sgiI.displayName = "Stats";
FramernSup3sgiI.defaultProps = {
	height: 666,
	width: 1200,
};
addPropertyControls3(FramernSup3sgiI, {
	variant: {
		options: ["NA9tl3BSk", "PNcXG1_K3", "OfDgnmYdB"],
		optionTitles: ["Desktop", "Tablet", "Phone"],
		title: "Variant",
		type: ControlType6.Enum,
	},
});
addFonts2(
	FramernSup3sgiI,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
			],
		},
		...SectionTagFonts,
		...ResultItemFonts,
		...VideoFonts,
		...getFontsFromSharedStyle2(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:stats
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "OfDgnmYdB",
	md: "PNcXG1_K3",
	xl: "NA9tl3BSk",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"82783e7fcf4f326d8d9b4a72041dedf3d5360c1cd183094c631a3a227d30a683"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default3, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * Renders StatsFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale, ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"82783e7fcf4f326d8d9b4a72041dedf3d5360c1cd183094c631a3a227d30a683"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default3}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default3);
var stats_default = ComponentWithRoot;
export { stats_default as default };
